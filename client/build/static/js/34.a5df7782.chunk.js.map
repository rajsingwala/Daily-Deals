{"version":3,"sources":["functions/stripe.js","components/Stripe.js","pages/Payment.js","functions/order.js","functions/cart.js"],"names":["paymentIntent","authtoken","a","axios","post","headers","Stripe","useState","succeed","setSucceed","error","setError","processing","setProcessing","disabled","setDisabled","clientSecret","setClientSecret","finalPrice","setFinalPrice","dispatch","useDispatch","token","useSelector","selectUserToken","stripe","useStripe","elements","useElements","useEffect","then","res","console","log","data","Payable","handleSubmit","e","preventDefault","confirmCardPayment","payment_method","card","getElement","CardElement","billing_details","name","target","value","payload","message","createOrder","undefined","window","localStorage","removeItem","setCart","cart","setCouponRedux","coupon","removeCart","JSON","stringify","handleChange","className","to","numeral","format","id","onSubmit","options","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","onChange","onClick","role","Loader","promise","loadStripe","Payment","stripeResponse","getOrder","get","cashOrder","proceedCheckout","productCart","getCart","delete","userAddress","address","userData"],"mappings":"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","file":"static/js/34.a5df7782.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const paymentIntent = async (authtoken) =>\r\n  await axios.post(\r\n    `/create-payment-intent`,\r\n    {},\r\n    { headers: { authtoken } }\r\n  );\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CardElement,\r\n  Elements,\r\n  useElements,\r\n  useStripe,\r\n} from \"@stripe/react-stripe-js\";\r\nimport { paymentIntent } from \"../functions/stripe\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectUserToken } from \"../features/user/userSlice\";\r\nimport { Link } from \"react-router-dom\";\r\nimport numeral from \"numeral\";\r\nimport { createOrder } from \"../functions/order\";\r\nimport { setCart } from \"../features/cart/cartSlice\";\r\nimport { setCouponRedux } from \"../features/cart/couponSlice\";\r\nimport { removeCart } from \"../functions/cart\";\r\nimport Loader from \"./loading/Loader\";\r\n\r\nconst Stripe = () => {\r\n  const [succeed, setSucceed] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [processing, setProcessing] = useState(\"\");\r\n  const [disabled, setDisabled] = useState(true);\r\n  const [clientSecret, setClientSecret] = useState(\"\");\r\n  const [finalPrice, setFinalPrice] = useState(0);\r\n\r\n  const dispatch = useDispatch();\r\n  const token = useSelector(selectUserToken);\r\n\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  useEffect(() => {\r\n    paymentIntent(token).then((res) => {\r\n      console.log(res.data);\r\n      setClientSecret(res.data.clientSecret);\r\n      setFinalPrice(res.data.Payable / 100);\r\n    });\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setProcessing(true);\r\n\r\n    const payload = await stripe.confirmCardPayment(clientSecret, {\r\n      payment_method: {\r\n        card: elements.getElement(CardElement),\r\n        billing_details: {\r\n          name: e.target.name.value,\r\n        },\r\n      },\r\n    });\r\n\r\n    if (payload.error) {\r\n      setError(`Payment Faild ${payload.error.message}`);\r\n      setProcessing(false);\r\n    } else {\r\n      createOrder(payload, token).then((res) => {\r\n        if (typeof window !== undefined) localStorage.removeItem(\"cart\");\r\n        dispatch(setCart({ cart: [] }));\r\n        dispatch(setCouponRedux({ coupon: false }));\r\n        removeCart(token);\r\n      });\r\n      console.log(JSON.stringify(payload, null, 4));\r\n      setProcessing(false);\r\n      setError(null);\r\n      setSucceed(true);\r\n    }\r\n  };\r\n\r\n  const handleChange = async (e) => {\r\n    setDisabled(e.error ? true : false);\r\n    setError(e.error ? e.error.message : \"\");\r\n  };\r\n\r\n  const cardStyle = {\r\n    style: {\r\n      base: {\r\n        color: \"#32325d\",\r\n        fontFamily: \"Arial, sans-serif\",\r\n        fontSmoothing: \"antialiased\",\r\n        fontSize: \"20px\",\r\n        \"::placeholder\": {\r\n          color: \"#32325d\",\r\n        },\r\n      },\r\n      invalid: {\r\n        color: \"#fa755a\",\r\n        iconColor: \"#fa755a\",\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <p className={succeed ? \"result-message\" : \"result-message hidden\"}>\r\n        Payment SuccessFul.{\" \"}\r\n        <Link to=\"/user/history\">See it in your purchase history</Link>\r\n      </p>\r\n      {finalPrice !== 0 ? (\r\n        <>\r\n          <div className=\"stripe_amount\">\r\n            <p>\r\n              Amount Payable : â‚¹{\" \"}\r\n              {finalPrice && numeral(finalPrice).format(\"0,0.00\")}\r\n            </p>\r\n            <p></p>\r\n            <p></p>\r\n          </div>\r\n\r\n          <form\r\n            id=\"payment-form\"\r\n            className=\"stripe-form\"\r\n            onSubmit={handleSubmit}\r\n          >\r\n            <CardElement\r\n              id=\"card-element\"\r\n              options={cardStyle}\r\n              onChange={handleChange}\r\n            />\r\n            <button\r\n              className=\"stripe-button\"\r\n              disabled={disabled || processing || succeed}\r\n              onClick={handleSubmit}\r\n            >\r\n              <span id=\"button-text\">\r\n                {processing ? (\r\n                  <div className=\"spinner2\" id=\"spinner2\"></div>\r\n                ) : (\r\n                  \"PAY\"\r\n                )}\r\n              </span>\r\n            </button>\r\n            {error && (\r\n              <div id=\"card-error\" role=\"alert\">\r\n                {error}\r\n              </div>\r\n            )}\r\n          </form>\r\n        </>\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Stripe;\r\n","import React from \"react\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport Stripe from \"../components/Stripe\";\r\nimport \"../stripe.css\";\r\n\r\nconst STRIPE_KEY =\r\n  \"pk_test_51IxA6WSHAenAsUcM0VhOn8iNJ0b64loDcTpkdKQ1uVFZnnVLsLA4ahZKLPmQ4WhIDFEk8rq8GKkNoseCee2k5bwd00fPNhiXTk\";\r\n\r\nconst promise = loadStripe(STRIPE_KEY);\r\n\r\nconst Payment = () => {\r\n  return (\r\n    <div className=\"payment\">\r\n      <div className=\"payment_container\">\r\n        <div className=\"payment_title\">\r\n          <h2>Complete Your Purchase</h2>\r\n        </div>\r\n      </div>\r\n\r\n      {/*****************stripe*************/}\r\n      <Elements stripe={promise}>\r\n        <div className=\"stripe_container\">\r\n          <Stripe />\r\n        </div>\r\n      </Elements>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n","import axios from \"axios\";\r\n\r\nexport const createOrder = async (stripeResponse, authtoken) =>\r\n  await axios.post(\r\n    `/user/order`,\r\n    { stripeResponse },\r\n    { headers: { authtoken } }\r\n  );\r\n\r\nexport const getOrder = async (authtoken) =>\r\n  await axios.get(`/user/getorder`, {\r\n    headers: { authtoken },\r\n  });\r\n\r\nexport const cashOrder = async (authtoken) =>\r\n  await axios.post(`/user/cash-order`, {}, { headers: { authtoken } });\r\n","import axios from \"axios\";\r\n\r\nexport const proceedCheckout = async (productCart, authtoken) =>\r\n  await axios.post(\r\n    `/user/checkout`,\r\n    { cart: productCart },\r\n    { headers: { authtoken } }\r\n  );\r\n\r\nexport const getCart = async (authtoken) =>\r\n  await axios.get(`/user/checkout/get`, {\r\n    headers: { authtoken },\r\n  });\r\n\r\nexport const removeCart = async (authtoken) =>\r\n  await axios.delete(`/user/checkout/empty`, {\r\n    headers: { authtoken },\r\n  });\r\n\r\nexport const userAddress = async (address, authtoken) =>\r\n  await axios.post(`/user/address`, address, {\r\n    headers: { authtoken },\r\n  });\r\n\r\nexport const userData = async (authtoken) =>\r\n  await axios.post(\r\n    `/current-user`,\r\n    {},\r\n    {\r\n      headers: {\r\n        authtoken,\r\n      },\r\n    }\r\n  );\r\n"],"sourceRoot":""}